<div class="modal-backdrop fade show"></div>
<div class="modal fade show d-block" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title ">@Titulo</h5>
                <button type="button" @onclick="Cancel" class="close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                @if (Tipo == "Error")
                {
                    <i class="dripicons-warning h1 text-warning"></i>
                }
                else
                {
                    <i class="dripicons-information h1 text-info"></i>
                }
                <p>@Mensaje</p>
            </div>
            <div class="modal-footer">
                @if (Tipo == "Error")
                {
                    <button type="button" class="btn btn-warning" @onclick="Close">Entendido</button>
                }
                else
                {
                    <button type="button" class="btn btn-info" @onclick="Close">Entendido</button>
                }

            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string Titulo { get; set; }

    [Parameter]
    public string Mensaje { get; set; }

    [Parameter]
    public string Tipo { get; set; }

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    async void Close() => await BlazoredModal.CloseAsync(ModalResult.Ok(true));
    async void Cancel() => await BlazoredModal.CloseAsync(ModalResult.Cancel());

}
